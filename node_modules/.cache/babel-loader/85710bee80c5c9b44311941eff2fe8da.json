{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mikes\\\\Documents\\\\GitHub\\\\ytr\\\\src\\\\app.js\";\nimport React, { Component } from \"react\";\nimport Title from \"./components/title.js\";\nimport MiddleRow from \"./components/middleRow.js\";\nimport RandomVideoButton from \"./components/randomVideoButton.js\";\nimport Filter from \"./components/filter.js\";\nvar catagoriesMap = new Map();\ncatagoriesMap.set(\"No category\", 0);\ncatagoriesMap.set(\"Film & Animation\", 1);\ncatagoriesMap.set(\"Autos & Vehicles\", 2);\ncatagoriesMap.set(\"Music\", 10);\ncatagoriesMap.set(\"Pets & Animals\", 15);\ncatagoriesMap.set(\"Sports\", 17);\ncatagoriesMap.set(\"Travel & Events\", 19);\ncatagoriesMap.set(\"Gaming\", 20);\ncatagoriesMap.set(\"People & Blogs\", 22);\ncatagoriesMap.set(\"Comedy\", 23);\ncatagoriesMap.set(\"Entertainment\", 24);\ncatagoriesMap.set(\"News & Politics\", 25);\ncatagoriesMap.set(\"Howto & Style\", 26);\ncatagoriesMap.set(\"Education\", 27);\ncatagoriesMap.set(\"Science & Technology\", 28);\ncatagoriesMap.set(\"Nonprofits & Activism\", 29);\ncatagoriesMap.set(\"Movies\", 30);\ncatagoriesMap.set(\"Trailers\", 44); //todo: dont create the \"words\" array every time they click the button\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoURL: \"\",\n      searchWords: [],\n      category: 0\n    };\n\n    this.handleChange = event => {\n      console.log(\"Here\");\n      console.log(event.target.value);\n      console.log(catagoriesMap.get(event.target.value));\n      this.setState({\n        category: catagoriesMap.get(event.target.value)\n      });\n    };\n\n    this.getRandomVideo = () => {\n      this.getVideo();\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async getVideo(keywords) {\n    var filterCategory = true;\n    var category = \"44\"; //GET THIS NUMBER FROM THE FILTER\n\n    var keywords = await this.createWordList();\n    var keyword = keywords[Math.floor(Math.random() * keywords.length + 1)];\n    console.log(\"KEYWORD AT 66:\" + keywords[66]);\n    console.log(\"Chosen Keyword: \" + keyword);\n    const youtubeAPIKey = \"AIzaSyAWwZk3tMo_OZp0JZ9Y17oxykJpng6Q-nY\";\n    var baseApiUrl = \"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=\" + keyword;\n\n    if (filterCategory == true) {\n      baseApiUrl += \"&type=video\" + \"&videoCategoryId=\" + category;\n    } //can add more filters here\n    //USE A MAP TO ASSIGN CATEGORIES TO NUMBERS\n    //get categories from user\n    //published after/before\n\n\n    baseApiUrl += \"&key=\" + youtubeAPIKey;\n    const APIurl = \"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=\" + keyword + \"&type=video\" + \"&videoCategoryId=\" + category + \"&key=\" + youtubeAPIKey; //let res = await fetch(APIurl);\n\n    let res = await fetch(baseApiUrl);\n    let data = await res.json();\n    var searchLength = data.items.length;\n    var idIndex = Math.floor(Math.random() * searchLength);\n    console.log(\"LENGTH: \" + data.items.length);\n    var randomURL = \"https://www.youtube.com/embed/\" + data.items[idIndex].id.videoId;\n    console.log(\"Our URL: \" + randomURL);\n    console.log(data);\n    this.setState({\n      videoURL: randomURL\n    });\n    return randomURL;\n  }\n\n  async createWordList() {\n    var words = [];\n    let res = await fetch(\"/common-words.json\");\n    let data = await res.json();\n    console.log(data);\n\n    for (var i = 0; i < data.length; i++) {\n      words.push(data[i]);\n    }\n\n    return words;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RandomVideoButton, {\n          onClick: this.getRandomVideo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MiddleRow, {\n          url: this.state.videoURL,\n          changeFunction: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/mikes/Documents/GitHub/ytr/src/app.js"],"names":["React","Component","Title","MiddleRow","RandomVideoButton","Filter","catagoriesMap","Map","set","App","constructor","props","state","videoURL","searchWords","category","handleChange","event","console","log","target","value","get","setState","getRandomVideo","getVideo","bind","keywords","filterCategory","createWordList","keyword","Math","floor","random","length","youtubeAPIKey","baseApiUrl","APIurl","res","fetch","data","json","searchLength","items","idIndex","randomURL","id","videoId","words","i","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Title from \"./components/title.js\";\r\nimport MiddleRow from \"./components/middleRow.js\";\r\nimport RandomVideoButton from \"./components/randomVideoButton.js\";\r\nimport Filter from \"./components/filter.js\"\r\n\r\nvar catagoriesMap = new Map();\r\ncatagoriesMap.set(\"No category\", 0);\r\ncatagoriesMap.set(\"Film & Animation\", 1);\r\ncatagoriesMap.set(\"Autos & Vehicles\", 2);\r\ncatagoriesMap.set(\"Music\", 10);\r\ncatagoriesMap.set(\"Pets & Animals\", 15);\r\ncatagoriesMap.set(\"Sports\", 17);\r\ncatagoriesMap.set(\"Travel & Events\", 19);\r\ncatagoriesMap.set(\"Gaming\", 20);   \r\ncatagoriesMap.set(\"People & Blogs\", 22);\r\ncatagoriesMap.set(\"Comedy\", 23);\r\ncatagoriesMap.set(\"Entertainment\", 24);\r\ncatagoriesMap.set(\"News & Politics\", 25);\r\ncatagoriesMap.set(\"Howto & Style\", 26);\r\ncatagoriesMap.set(\"Education\", 27);\r\ncatagoriesMap.set(\"Science & Technology\", 28);\r\ncatagoriesMap.set(\"Nonprofits & Activism\", 29);\r\ncatagoriesMap.set(\"Movies\", 30);\r\ncatagoriesMap.set(\"Trailers\", 44);\r\n\r\n//todo: dont create the \"words\" array every time they click the button\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  state = {\r\n    videoURL: \"\",\r\n    searchWords: [],\r\n    category: 0,\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    console.log(\"Here\");\r\n    console.log(event.target.value);\r\n    console.log(catagoriesMap.get(event.target.value));\r\n    this.setState({ category: catagoriesMap.get(event.target.value) }); \r\n  };\r\n\r\n  async getVideo(keywords) {\r\n    var filterCategory = true;\r\n    var category = \"44\"; //GET THIS NUMBER FROM THE FILTER\r\n    var keywords = await this.createWordList();\r\n    var keyword = keywords[Math.floor(Math.random() * keywords.length + 1)];\r\n    console.log(\"KEYWORD AT 66:\" + keywords[66]);\r\n    console.log(\"Chosen Keyword: \" + keyword);\r\n    const youtubeAPIKey = \"AIzaSyAWwZk3tMo_OZp0JZ9Y17oxykJpng6Q-nY\";\r\n\r\n    var baseApiUrl = \r\n    \"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=\" +\r\n    keyword \r\n\r\n    if (filterCategory == true){\r\n      baseApiUrl += \"&type=video\" +\"&videoCategoryId=\" + category \r\n    }\r\n    //can add more filters here\r\n    //USE A MAP TO ASSIGN CATEGORIES TO NUMBERS\r\n    //get categories from user\r\n    //published after/before\r\n    baseApiUrl += \"&key=\" + youtubeAPIKey;\r\n\r\n\r\n    const APIurl =\r\n      \"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=\" +\r\n      keyword +\r\n      \"&type=video\" +\r\n      \"&videoCategoryId=\" +\r\n      category +\r\n      \"&key=\" +\r\n      youtubeAPIKey;\r\n    //let res = await fetch(APIurl);\r\n    let res = await fetch(baseApiUrl);\r\n    let data = await res.json(); \r\n    var searchLength = data.items.length;\r\n    var idIndex = Math.floor(Math.random() * searchLength);\r\n    console.log(\"LENGTH: \" + data.items.length);\r\n    var randomURL =\r\n      \"https://www.youtube.com/embed/\" + data.items[idIndex].id.videoId;\r\n    console.log(\"Our URL: \" + randomURL);\r\n    console.log(data);\r\n    this.setState({ videoURL: randomURL });\r\n    return randomURL;\r\n  }\r\n\r\n  async createWordList() {\r\n    var words = [];\r\n    let res = await fetch(\"/common-words.json\");\r\n    let data = await res.json();\r\n    console.log(data);\r\n    for (var i = 0; i < data.length; i++) {\r\n      words.push(data[i]);\r\n    }\r\n    return words;\r\n  }\r\n\r\n  getRandomVideo = () => {\r\n    this.getVideo();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Title />\r\n          <RandomVideoButton onClick={this.getRandomVideo} />\r\n          <MiddleRow url={this.state.videoURL} changeFunction={this.handleChange} />\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}