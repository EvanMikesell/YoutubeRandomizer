{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/mikes/Documents/GitHub/ytr/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/mikes/Documents/GitHub/ytr/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/Users/mikes/Documents/GitHub/ytr/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/mikes/Documents/GitHub/ytr/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/mikes/Documents/GitHub/ytr/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/mikes/Documents/GitHub/ytr/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/mikes/Documents/GitHub/ytr/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Component}from\"react\";import Title from\"./components/title.js\";import MiddleRow from\"./components/middleRow.js\";import EmbeddedVideo from\"./components/embeddedVideo.js\";//map containing categories and their ID values\nvar catagoriesMap=new Map();catagoriesMap.set(\"No category\",0);catagoriesMap.set(\"Film & Animation\",1);catagoriesMap.set(\"Autos & Vehicles\",2);catagoriesMap.set(\"Music\",10);catagoriesMap.set(\"Pets & Animals\",15);catagoriesMap.set(\"Sports\",17);catagoriesMap.set(\"Travel & Events\",19);catagoriesMap.set(\"Gaming\",20);catagoriesMap.set(\"People & Blogs\",22);catagoriesMap.set(\"Comedy\",23);catagoriesMap.set(\"Entertainment\",24);catagoriesMap.set(\"News & Politics\",25);catagoriesMap.set(\"Howto & Style\",26);catagoriesMap.set(\"Education\",27);catagoriesMap.set(\"Science & Technology\",28);catagoriesMap.set(\"Nonprofits & Activism\",29);catagoriesMap.set(\"Movies\",30);catagoriesMap.set(\"Trailers\",44);//todo: dont create the \"words\" array every time they click the button\nvar App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.getRandomVideo=function(){_this.getVideo();};_this.updateFilters=_this.updateFilters.bind(_assertThisInitialized(_this));_this.state={videoURL:\"\",searchWords:[],category:0,length:\"any\",year:0};return _this;}//getting values from our filter\n_createClass(App,[{key:\"updateFilters\",value:function updateFilters(categoryName,duration,selectedYear){var categoryNumber=catagoriesMap.get(categoryName);this.setState({category:categoryNumber});this.setState({length:duration});this.setState({year:selectedYear});console.log(\"Category:\",categoryName,\"ID:\",categoryNumber);console.log(\"Length:\",duration);console.log(\"Year:\",selectedYear);}},{key:\"getVideo\",value:function(){var _getVideo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var keywords,keyword,youtubeAPIKey,baseApiUrl,apiUrlWithKeyword,res,data,searchLength,idIndex,randomURL;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return this.createWordList();case 2:keywords=_context.sent;keyword=keywords[Math.floor(Math.random()*keywords.length+1)];console.log(\"Chosen Keyword: \"+keyword);youtubeAPIKey=\"AIzaSyAWwZk3tMo_OZp0JZ9Y17oxykJpng6Q-nY\";//api url before adding our values from the filters\nbaseApiUrl=\"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&type=video&key=\"+youtubeAPIKey;//filter by a category\nif(this.state.category!=0){baseApiUrl+=\"&videoCategoryId=\"+this.state.category;}//filter by length\nif(this.state.length!=\"any\"){baseApiUrl+=\"&videoDuration=\"+this.state.length;}//filter by year\nif(this.state.year!=0){baseApiUrl+=\"&publishedBefore=\"+this.state.year+\"-12-31T00:00:00.0Z\"+\"&publishedAfter=\"+this.state.year+\"-01-01T00:00:00.0Z\";}//apply our keyword in a new variable\napiUrlWithKeyword=baseApiUrl+\"&q=\"+keyword;_context.next=13;return fetch(apiUrlWithKeyword);case 13:res=_context.sent;_context.next=16;return res.json();case 16:data=_context.sent;//checking if api quota has been exceeded, searchlength will be undefined\ntry{searchLength=data.items.length;}catch(error){alert(\"The Youtube API quota for this project has been exceeded. Unfortunately we can only make 100 requests each day. Quota resets at 12AM PST.\");}//if true, either a bad keyword was picked, or filters are not allowing for a video to be found\nif(!(searchLength==0)){_context.next=27;break;}_context.next=21;return fetch(baseApiUrl);case 21:res=_context.sent;_context.next=24;return res.json();case 24:data=_context.sent;searchLength=data.items.length;//if a video couldn't be found, even without a keyword\nif(searchLength==0){alert(\"Could not find a video. The selected filters may not be compatible with eachother.\");}else{alert(\"Found a video, but didn't use keyword\");}case 27:idIndex=Math.floor(Math.random()*searchLength);console.log(\"LENGTH: \"+data.items.length);randomURL=\"https://www.youtube.com/embed/\"+data.items[idIndex].id.videoId;console.log(\"Our URL: \"+randomURL);console.log(data);this.setState({videoURL:randomURL});return _context.abrupt(\"return\",randomURL);case 34:case\"end\":return _context.stop();}}},_callee,this);}));function getVideo(){return _getVideo.apply(this,arguments);}return getVideo;}()//creating random word list that we will select a video out of\n},{key:\"createWordList\",value:function(){var _createWordList=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var words,res,data,i;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:words=[];_context2.next=3;return fetch(\"/common-words.json\");case 3:res=_context2.sent;_context2.next=6;return res.json();case 6:data=_context2.sent;console.log(data);for(i=0;i<data.length;i++){words.push(data[i]);}return _context2.abrupt(\"return\",words);case 10:case\"end\":return _context2.stop();}}},_callee2);}));function createWordList(){return _createWordList.apply(this,arguments);}return createWordList;}()},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"body\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Title,{}),/*#__PURE__*/_jsx(MiddleRow,{updateFilters:this.updateFilters,getRandomVideo:this.getRandomVideo}),/*#__PURE__*/_jsx(EmbeddedVideo,{url:this.state.videoURL})]})});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["C:/Users/mikes/Documents/GitHub/ytr/src/app.js"],"names":["React","Component","Title","MiddleRow","EmbeddedVideo","catagoriesMap","Map","set","App","props","getRandomVideo","getVideo","updateFilters","bind","state","videoURL","searchWords","category","length","year","categoryName","duration","selectedYear","categoryNumber","get","setState","console","log","createWordList","keywords","keyword","Math","floor","random","youtubeAPIKey","baseApiUrl","apiUrlWithKeyword","fetch","res","json","data","searchLength","items","error","alert","idIndex","randomURL","id","videoId","words","i","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Title from \"./components/title.js\";\r\nimport MiddleRow from \"./components/middleRow.js\";\r\nimport EmbeddedVideo from \"./components/embeddedVideo.js\";\r\n\r\n//map containing categories and their ID values\r\nvar catagoriesMap = new Map();\r\ncatagoriesMap.set(\"No category\", 0);\r\ncatagoriesMap.set(\"Film & Animation\", 1);\r\ncatagoriesMap.set(\"Autos & Vehicles\", 2);\r\ncatagoriesMap.set(\"Music\", 10);\r\ncatagoriesMap.set(\"Pets & Animals\", 15);\r\ncatagoriesMap.set(\"Sports\", 17);\r\ncatagoriesMap.set(\"Travel & Events\", 19);\r\ncatagoriesMap.set(\"Gaming\", 20);   \r\ncatagoriesMap.set(\"People & Blogs\", 22);\r\ncatagoriesMap.set(\"Comedy\", 23);\r\ncatagoriesMap.set(\"Entertainment\", 24);\r\ncatagoriesMap.set(\"News & Politics\", 25);\r\ncatagoriesMap.set(\"Howto & Style\", 26);\r\ncatagoriesMap.set(\"Education\", 27);\r\ncatagoriesMap.set(\"Science & Technology\", 28);\r\ncatagoriesMap.set(\"Nonprofits & Activism\", 29);\r\ncatagoriesMap.set(\"Movies\", 30);\r\ncatagoriesMap.set(\"Trailers\", 44);\r\n\r\n//todo: dont create the \"words\" array every time they click the button\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.updateFilters = this.updateFilters.bind(this);\r\n    this.state = {\r\n      videoURL: \"\",\r\n      searchWords: [],\r\n      category: 0,\r\n      length: \"any\",\r\n      year: 0,\r\n    };\r\n  }\r\n\r\n  //getting values from our filter\r\n  updateFilters(categoryName, duration, selectedYear) {\r\n    var categoryNumber = catagoriesMap.get(categoryName);\r\n    this.setState({ category: categoryNumber}); \r\n    this.setState({ length: duration}); \r\n    this.setState({ year: selectedYear}); \r\n    console.log(\"Category:\", categoryName, \"ID:\", categoryNumber);\r\n    console.log(\"Length:\", duration);\r\n    console.log(\"Year:\", selectedYear);\r\n  };\r\n\r\n  async getVideo() {\r\n    var keywords = await this.createWordList();\r\n    var keyword = keywords[Math.floor(Math.random() * keywords.length + 1)];\r\n    console.log(\"Chosen Keyword: \" + keyword);\r\n    const youtubeAPIKey = \"AIzaSyAWwZk3tMo_OZp0JZ9Y17oxykJpng6Q-nY\";\r\n\r\n    //api url before adding our values from the filters\r\n    var baseApiUrl = \"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&type=video&key=\" + youtubeAPIKey;\r\n    \r\n    //filter by a category\r\n    if (this.state.category != 0){\r\n      baseApiUrl += \"&videoCategoryId=\" + this.state.category;\r\n    }\r\n    \r\n    //filter by length\r\n    if (this.state.length != \"any\"){\r\n      baseApiUrl += \"&videoDuration=\" + this.state.length;\r\n    }\r\n   \r\n    //filter by year\r\n    if (this.state.year != 0){\r\n      baseApiUrl += \"&publishedBefore=\" + this.state.year + \"-12-31T00:00:00.0Z\" + \r\n                    \"&publishedAfter=\" + this.state.year + \"-01-01T00:00:00.0Z\";\r\n    }\r\n\r\n    //apply our keyword in a new variable\r\n    var apiUrlWithKeyword = baseApiUrl + \"&q=\" + keyword\r\n\r\n    let res = await fetch(apiUrlWithKeyword);\r\n    let data = await res.json(); \r\n    var searchLength;\r\n\r\n    //checking if api quota has been exceeded, searchlength will be undefined\r\n    try{\r\n      searchLength = data.items.length;\r\n    }\r\n    catch (error){\r\n      alert(\"The Youtube API quota for this project has been exceeded. Unfortunately we can only make 100 requests each day. Quota resets at 12AM PST.\");\r\n    }\r\n\r\n    //if true, either a bad keyword was picked, or filters are not allowing for a video to be found\r\n    if (searchLength == 0){\r\n      //we will make the search without specifying a keyword\r\n      res = await fetch(baseApiUrl);\r\n      data = await res.json(); \r\n      searchLength = data.items.length;\r\n      //if a video couldn't be found, even without a keyword\r\n      if (searchLength == 0){\r\n        alert(\"Could not find a video. The selected filters may not be compatible with eachother.\");\r\n      }\r\n      else{\r\n        alert(\"Found a video, but didn't use keyword\");\r\n      }\r\n    }\r\n    var idIndex = Math.floor(Math.random() * searchLength);\r\n    console.log(\"LENGTH: \" + data.items.length);\r\n    var randomURL = \"https://www.youtube.com/embed/\" + data.items[idIndex].id.videoId;\r\n    console.log(\"Our URL: \" + randomURL);\r\n    console.log(data);\r\n    this.setState({ videoURL: randomURL });\r\n    return randomURL;\r\n  }\r\n\r\n  //creating random word list that we will select a video out of\r\n  async createWordList() {\r\n    var words = [];\r\n    let res = await fetch(\"/common-words.json\");\r\n    let data = await res.json();\r\n    console.log(data);\r\n    for (var i = 0; i < data.length; i++) {\r\n      words.push(data[i]);\r\n    }\r\n    return words;\r\n  }\r\n\r\n  getRandomVideo = () => {\r\n    this.getVideo();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Title />\r\n          <MiddleRow updateFilters={this.updateFilters} getRandomVideo={this.getRandomVideo} />\r\n          <EmbeddedVideo url={this.state.videoURL} />\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}