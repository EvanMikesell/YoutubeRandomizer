{"version":3,"sources":["components/title.js","components/randomVideoButton.js","components/filter.js","components/middleRow.js","components/embeddedVideo.js","app.js","index.js"],"names":["Title","id","Component","RandomVideoButton","type","onClick","this","props","Filter","state","category","length","year","handleChange","event","setState","target","name","value","updateFilters","toString","onChange","htmlFor","MiddleRow","className","getRandomVideo","EmbeddedVideo","class","title","frameborder","height","width","src","url","catagoriesMap","Map","set","App","getVideo","bind","videoURL","searchWords","categoryName","duration","selectedYear","categoryNumber","get","console","log","createWordList","keywords","keyword","Math","floor","random","baseApiUrl","apiUrlWithKeyword","fetch","res","json","data","searchLength","items","error","alert","idIndex","randomURL","videoId","words","i","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f039f20.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./title.css\";\r\nclass Title extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"header\">\r\n          <h1>YouTube Randomizer</h1>\r\n          <p>Created by Evan Mikesell</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Title;\r\n","//TODO: Create a main wrapper that tracks the state, make the button its own jsx file apart from the embedded video file\r\nimport React, { Component, Fragment } from \"react\";\r\nimport \"./randomVideoButton.css\";\r\nclass RandomVideoButton extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"startVideoButton\">\r\n        <button type=\"button\" onClick={this.props.onClick}>\r\n          Load Random Video\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default RandomVideoButton;\r\n","import React, { Component } from \"react\";\r\nimport \"./filter.css\";\r\n\r\nclass Filter extends Component {\r\n  state = {\r\n    category : 'No category',\r\n    length : 'any',\r\n    year : 0,\r\n  };\r\n\r\n  //sending our filters up to app.js\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: [event.target.value] }, () =>\r\n      this.props.updateFilters(this.state.category.toString(), this.state.length, this.state.year)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <text id=\"filterTitle\">\r\n          {\"Filters\"}\r\n          <br />\r\n        </text>\r\n        <div id=\"categoriesRow\">\r\n          <label id=\"categories\">Category:</label>\r\n          <select id=\"categoriesDropDown\" name=\"category\" onChange={this.handleChange}>\r\n            <option value=\"No category\">No category</option>\r\n            <option value=\"Film & Animation\">Film & Animation</option>\r\n            <option value=\"Autos & Vehicles\">Autos & Vehicles</option>\r\n            <option value=\"Music\">Music</option>\r\n            <option value=\"Pets & Animals\">Pets & Animals</option>\r\n            <option value=\"Sports\">Sports</option>\r\n            <option value=\"Travel & Events\">Travel & Events</option>\r\n            <option value=\"Gaming\">Gaming</option>\r\n            <option value=\"People & Blogs\">People & Blogs</option>\r\n            <option value=\"Comedy\">Comedy</option>\r\n            <option value=\"News & Politics\">News & Politics</option>\r\n            <option value=\"Entertainment\">Entertainment</option>\r\n            <option value=\"Howto & Style\">Howto & Style</option>\r\n            <option value=\"Education\">Education</option>\r\n            <option value=\"Science & Technology\">Science & Technology</option>\r\n            <option value=\"Nonprofits & Activism\">Nonprofits & Activism</option>\r\n            <option value=\"Movies\">Movies</option>\r\n            <option value=\"Trailers\">Trailers</option>\r\n          </select>\r\n        </div>\r\n        <div id=\"durationRow\">\r\n          <label htmlFor=\"videoDuration\">Video Length:</label>\r\n          <select id=\"durationDropDown\" name=\"length\" onChange={this.handleChange}>\r\n            <option value=\"any\">Any length</option>\r\n            <option value=\"short\">0-4 Minutes</option>\r\n            <option value=\"medium\">4-20 Minutes</option>\r\n            <option value=\"long\">20+ Minutes</option>\r\n          </select>\r\n        </div>\r\n        <div id=\"yearRow\">\r\n          <label id=\"year\">Year:</label>\r\n          <select id=\"yearDropDown\" name=\"year\" onChange={this.handleChange}>\r\n            <option value=\"0\">Any Year</option>\r\n            <option value=\"2005\">2005</option>\r\n            <option value=\"2006\">2006</option>\r\n            <option value=\"2007\">2007</option>\r\n            <option value=\"2008\">2008</option>\r\n            <option value=\"2009\">2009</option>\r\n            <option value=\"2010\">2010</option>\r\n            <option value=\"2011\">2011</option>\r\n            <option value=\"2012\">2012</option>\r\n            <option value=\"2013\">2013</option>\r\n            <option value=\"2014\">2014</option>\r\n            <option value=\"2015\">2015</option>\r\n            <option value=\"2016\">2016</option>\r\n            <option value=\"2017\">2017</option>\r\n            <option value=\"2018\">2018</option>\r\n            <option value=\"2019\">2019</option>\r\n            <option value=\"2020\">2020</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport RandomVideoButton from \"./randomVideoButton.js\"\r\nimport Filter from \"./filter.js\";\r\nimport \"./middleRow.css\";\r\nimport \"./embeddedVideo.css\";\r\nclass MiddleRow extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"middle\">\r\n        <RandomVideoButton onClick={this.props.getRandomVideo} />\r\n        <Filter updateFilters={this.props.updateFilters}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MiddleRow;\r\n","import React, { Component } from \"react\";\r\nimport \"./embeddedVideo.css\";\r\nclass EmbeddedVideo extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"videoWrapperWrapper\">\r\n        <div class=\"videoWrapper\">\r\n          <iframe\r\n            title=\"Random Video\"\r\n            frameborder=\"0\"\r\n            height=\"500\"\r\n            width=\"850\"\r\n            src={this.props.url}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EmbeddedVideo;","import React, { Component } from \"react\";\r\nimport Title from \"./components/title.js\";\r\nimport MiddleRow from \"./components/middleRow.js\";\r\nimport EmbeddedVideo from \"./components/embeddedVideo.js\";\r\n\r\n//map containing categories and their ID values\r\nvar catagoriesMap = new Map();\r\ncatagoriesMap.set(\"No category\", 0);\r\ncatagoriesMap.set(\"Film & Animation\", 1);\r\ncatagoriesMap.set(\"Autos & Vehicles\", 2);\r\ncatagoriesMap.set(\"Music\", 10);\r\ncatagoriesMap.set(\"Pets & Animals\", 15);\r\ncatagoriesMap.set(\"Sports\", 17);\r\ncatagoriesMap.set(\"Travel & Events\", 19);\r\ncatagoriesMap.set(\"Gaming\", 20);   \r\ncatagoriesMap.set(\"People & Blogs\", 22);\r\ncatagoriesMap.set(\"Comedy\", 23);\r\ncatagoriesMap.set(\"Entertainment\", 24);\r\ncatagoriesMap.set(\"News & Politics\", 25);\r\ncatagoriesMap.set(\"Howto & Style\", 26);\r\ncatagoriesMap.set(\"Education\", 27);\r\ncatagoriesMap.set(\"Science & Technology\", 28);\r\ncatagoriesMap.set(\"Nonprofits & Activism\", 29);\r\ncatagoriesMap.set(\"Movies\", 30);\r\ncatagoriesMap.set(\"Trailers\", 44);\r\n\r\n//todo: dont create the \"words\" array every time they click the button\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.updateFilters = this.updateFilters.bind(this);\r\n    this.state = {\r\n      videoURL: \"\",\r\n      searchWords: [],\r\n      category: 0,\r\n      length: \"any\",\r\n      year: 0,\r\n    };\r\n  }\r\n\r\n  //getting values from our filter\r\n  updateFilters(categoryName, duration, selectedYear) {\r\n    var categoryNumber = catagoriesMap.get(categoryName);\r\n    this.setState({ category: categoryNumber}); \r\n    this.setState({ length: duration}); \r\n    this.setState({ year: selectedYear}); \r\n    console.log(\"Category:\", categoryName, \"ID:\", categoryNumber);\r\n    console.log(\"Length:\", duration);\r\n    console.log(\"Year:\", selectedYear);\r\n  };\r\n\r\n  async getVideo() {\r\n    var keywords = await this.createWordList();\r\n    var keyword = keywords[Math.floor(Math.random() * keywords.length + 1)];\r\n    console.log(\"Chosen Keyword: \" + keyword);\r\n    const youtubeAPIKey = \"AIzaSyAWwZk3tMo_OZp0JZ9Y17oxykJpng6Q-nY\";\r\n\r\n    //api url before adding our values from the filters\r\n    var baseApiUrl = \"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&type=video&key=\" + youtubeAPIKey;\r\n    \r\n    //filter by a category\r\n    if (this.state.category !== 0){\r\n      baseApiUrl += \"&videoCategoryId=\" + this.state.category;\r\n    }\r\n    \r\n    //filter by length\r\n    if (this.state.length !== \"any\"){\r\n      baseApiUrl += \"&videoDuration=\" + this.state.length;\r\n    }\r\n   \r\n    //filter by year\r\n    if (this.state.year !== 0){\r\n      baseApiUrl += \"&publishedBefore=\" + this.state.year + \"-12-31T00:00:00.0Z\" + \r\n                    \"&publishedAfter=\" + this.state.year + \"-01-01T00:00:00.0Z\";\r\n    }\r\n\r\n    //apply our keyword in a new variable\r\n    var apiUrlWithKeyword = baseApiUrl + \"&q=\" + keyword\r\n\r\n    let res = await fetch(apiUrlWithKeyword);\r\n    let data = await res.json(); \r\n    var searchLength;\r\n\r\n    //checking if api quota has been exceeded, searchlength will be undefined\r\n    try{\r\n      searchLength = data.items.length;\r\n    }\r\n    catch (error){\r\n      alert(\"The Youtube API quota for this project has been exceeded. Unfortunately we can only make 100 requests each day. Quota resets at 12AM PST.\");\r\n    }\r\n\r\n    //if true, either a bad keyword was picked, or filters are not allowing for a video to be found\r\n    if (searchLength === 0){\r\n      //we will make the search without specifying a keyword\r\n      res = await fetch(baseApiUrl);\r\n      data = await res.json(); \r\n      searchLength = data.items.length;\r\n      //if a video couldn't be found, even without a keyword\r\n      if (searchLength === 0){\r\n        alert(\"Could not find a video. The selected filters may not be compatible with eachother.\");\r\n      }\r\n      else{\r\n        alert(\"Found a video, but didn't use keyword\");\r\n      }\r\n    }\r\n    var idIndex = Math.floor(Math.random() * searchLength);\r\n    console.log(\"LENGTH: \" + data.items.length);\r\n    var randomURL = \"https://www.youtube.com/embed/\" + data.items[idIndex].id.videoId;\r\n    console.log(\"Our URL: \" + randomURL);\r\n    console.log(data);\r\n    this.setState({ videoURL: randomURL });\r\n    return randomURL;\r\n  }\r\n\r\n  //creating random word list that we will select a video out of\r\n  async createWordList() {\r\n    var words = [];\r\n    let res = await fetch(\"/common-words.json\");\r\n    let data = await res.json();\r\n    console.log(data);\r\n    for (var i = 0; i < data.length; i++) {\r\n      words.push(data[i]);\r\n    }\r\n    return words;\r\n  }\r\n\r\n  getRandomVideo = () => {\r\n    this.getVideo();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <body>\r\n        <div>\r\n          <Title />\r\n          <MiddleRow updateFilters={this.updateFilters} getRandomVideo={this.getRandomVideo} />\r\n          <EmbeddedVideo url={this.state.videoURL} />\r\n        </div>\r\n      </body>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app\";\r\nimport \"./index.css\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}